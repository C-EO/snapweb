#!/usr/bin/python3
"""python3 hook for webdm"""

import configparser
import os
import subprocess
import sys
import yaml


WEBDM_DATA_PATH = os.environ['SNAP_APP_DATA_PATH']
WEBDM_VERSION = os.environ['SNAP_VERSION']
AVAHI_CONFIG_FILE = os.path.join(WEBDM_DATA_PATH, 'avahi-daemon.conf')

def main():
    """main is the main function"""

    config_yaml = yaml.load(sys.stdin)
    if config_yaml:
        avahi_config = set_config(config_yaml)

        with open(AVAHI_CONFIG_FILE, 'w') as config:
            avahi_config.write(config, space_around_delimiters=False)

    yaml.dump(get_config(), stream=sys.stdout, default_flow_style=False)
    sys.exit(0)


def set_config(config_yaml):
    """set_config sets a configuration and returns avahi_config"""

    restart_avahi = False

    config = config_yaml['config']['webdm']

    avahi_config = configparser.ConfigParser()
    avahi_config.read(AVAHI_CONFIG_FILE)

    if 'avahi-hostname' in config:
        avahi_config['server']['host-name'] = config['avahi-hostname']
        restart_avahi = True

    if restart_avahi:
        avahi_unit = 'webdm_avahi_%s.service' % WEBDM_VERSION
        try:
            subprocess.check_call(['systemctl', 'restart', avahi_unit])
        except subprocess.CalledProcessError:
            print("Cannot restart required services to fully apply "
                  "the configuration changes")

    return avahi_config


def get_config():
    """get_config returns config with the current configuration"""

    config = {}
    config['config'] = {}
    config['config']['webdm'] = {}

    avahi_config = configparser.ConfigParser()
    avahi_config.read(AVAHI_CONFIG_FILE)

    hostname = avahi_config['server']['host-name']
    config['config']['webdm']['avahi-hostname'] = hostname

    return config

if __name__ == '__main__':
    main()
